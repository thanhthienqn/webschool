// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id          String  @id @default(uuid())
  name        String
  email       String
  password    String
  phoneNumber String?
  image       Image[]
  roles       Role[]
  news        News[]
  notifi      Notifi[]
  contentAssetNews      ContentAssetNews[]
  refreshTokenJWT String?     @db.Text
  expriedAccessTokenJWT DateTime?
  created_at  DateTime @default(now())
}

model SessionAccount {
  id                    String    @id @default(uuid())
  accessTokenJWT        String?   @db.Text
  refreshTokenJWT       String?   @db.Text
  expriedAccessTokenJWT DateTime?
}

model Role {
  id              String    @id @default(uuid())
  nameRole        String
  descriptionRole String
  account         Account[]
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt
}

model News {
  id          String  @id @default(uuid())
  title       String
  thumbnailNews String
  body        String  @db.Text
  description String  @db.Text
  views       Int?  @default(0)
  image       Image[]
  account     Account[]
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
}


model ContentAssetNews {
  id         String   @id @default(uuid())
  image      Image[]
  accountId  String
  account    Account  @relation(fields: [accountId], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Notifi {
  id              String  @id @default(uuid())
  title           String
  content         String  @db.Text
  account         Account[]
  departmentId    String?
  department      Department? @relation (fields: [departmentId], references: [id])
  created_at      DateTime   @default(now())
  updated_at      DateTime   @updatedAt
}

model Department {
  id              String  @id @default(uuid())
  title           String
  description     String
  notifi          Notifi[]
  created_at      DateTime   @default(now())
  updated_at      DateTime   @updatedAt
}

model Information {
  id          String  @id @default(uuid())
  title       String
  body        String  @db.Text
  image       Image []
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
}

model TrainingFields {
  id                      String @id @default (uuid())
  title                   String
  body                    String  @db.Text
  thumbnailTrainingFields String
  image                   Image []
  created_at              DateTime   @default(now())
  updated_at              DateTime   @updatedAt
}

model AboutUs {
  id               String   @id @default(uuid())
  name             String
  description      String
  thumbnailAboutUs String
  image            Image[]
  created_at       DateTime   @default(now())
  updated_at       DateTime   @updatedAt
}

model Image {
  id                    String  @id @default(uuid())
  path                  String 
  accountId             String
  account               Account @relation(fields: [accountId], references: [id])
  contentAssetNews      ContentAssetNews? @relation(fields: [contentAssetNewsId], references: [id])
  contentAssetNewsId    String?
  newsId                String?
  news                  News? @relation(fields: [newsId], references: [id])
  aboutUsId             String?
  aboutUs               AboutUs? @relation(fields: [aboutUsId], references: [id])
  partnerId             String?
  partner               Partner? @relation(fields: [partnerId], references: [id])
  typeImageId           String
  typeImage             TypeImage @relation(fields: [typeImageId], references: [id])
  communicateId         String?
  communicate           Communicate? @relation(fields: [communicateId], references: [id])
  trainingfieldsId      String?
  trainingfields        TrainingFields? @relation(fields: [trainingfieldsId], references: [id])
  informationId         String?
  information           Information? @relation (fields: [informationId], references: [id])
  admissionsId          String?
  admission             Admissions? @relation(fields: [admissionsId], references: [id])
  created_at            DateTime   @default(now())
  updated_at            DateTime   @updatedAt
}

model TypeImage {
  id              String  @id @default(uuid())
  name            String
  description     String
  image           Image[]
  created_at      DateTime   @default(now())
  updated_at      DateTime   @updatedAt
}

model Event {
  id          String  @id @default(uuid())
  accountId   String
  title       String
  content     String  @db.Text
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
}


model Admissions {
  id              String  @id @default(uuid())
  title           String
  body            String  @db.Text
  image           Image[]
  created_at      DateTime   @default(now())
  updated_at      DateTime   @updatedAt
}

model Partner {
  id                String @id @default(uuid())
  name              String
  thumbnailPartner  String
  image             Image[]
  created_at        DateTime   @default(now())
  updated_at        DateTime   @updatedAt
}

model PageView {
  id          String  @id @default(uuid())
  pageName    String
  views       Int   @default(0)
}

model Link {
  id          String @id  @default(uuid())
  name        String
  url         String
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
}

model Student {
  id          String  @id @default(uuid())
  fullName    String
  email       String?
  phoneNumber Int?
  address     String?
  schoolYears String?
  information String?
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Communicate {
  id        String  @id @default(uuid())
  title     String
  body      String  @db.Text
  image     Image []
  views     Int
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
}

model Schedule {
  id          String @id  @default(uuid())
  name        String
  description String?
  startDate   DateTime
  endDate     DateTime
}